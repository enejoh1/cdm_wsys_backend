<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="bin">
	<resultMap id="result" type="bin">
		<result property="unique_id" 		column="unique_id" 			javaType="java.lang.Long" />
		<result property="uid_company" 		column="uid_company" 		javaType="java.lang.Long" />
		<result property="uid_rack" 		column="uid_rack" 		javaType="java.lang.Long" />
		<result property="bin_code" 		column="bin_code" />
		<result property="bin_name" 		column="bin_name" />
		<result property="bin_row" 		column="bin_row" 			javaType="java.lang.Integer" />
		<result property="bin_col" 		column="bin_col" 			javaType="java.lang.Integer" />
		<result property="remark" 			column="remark" />

		<result property="rack_code" 		column="rack_code" />
		<result property="rack_name" 		column="rack_name" />
		<result property="wh_code" 			column="wh_code" />
		<result property="wh_name" 			column="wh_name" />

		<result property="del_yn" 			column="del_yn" />
		<result property="creator" 			column="creator" />
		<result property="creator_uid" 		column="creator_uid" 	javaType="java.lang.Long" />
		<result property="create_date" 		column="create_date" 	javaType="java.util.Date" />
		<result property="changer" 			column="changer" />
		<result property="changer_uid" 		column="changer_uid" 	javaType="java.lang.Long" />
		<result property="change_date" 		column="change_date" 	javaType="java.util.Date" />
		<result property="lotno" 		column="lotno" 	javaType="java.util.Date" />
	</resultMap>

	<insert id="insert-bin" parameterType="bin">
		INSERT INTO TB_BIN
			(
			 unique_id, uid_company, uid_rack, bin_code, bin_name, bin_row, bin_col, remark,
			 creator_uid, creator, create_date
			)
		VALUES
		 	(
		 	 #{unique_id}, #{uid_company}, #{uid_rack}, #{bin_code}, #{bin_name}, #{bin_row}, #{bin_col}, #{remark},
		 	 #{creator_uid}, #{creator}, #{create_date}
		 	)
		ON DUPLICATE KEY UPDATE
			uid_company = #{uid_company},
			uid_rack = #{uid_rack},
			bin_code = #{bin_code},
			bin_name = #{bin_name},
			bin_row = #{bin_row},
			bin_col = #{bin_col},
			remark = #{remark},
			creator_uid = #{creator_uid},
			creator = #{creator},
			del_yn = 'N',
			create_date = #{create_date}

	</insert>

	<sql id="select-bin-fields">
		bin.unique_id, bin.uid_company, bin.uid_rack, bin.bin_code, bin.bin_name, bin.bin_row, bin.bin_col, bin.remark,
		bin.del_yn, bin.creator, bin.creator_uid, bin.create_date, bin.changer, bin.changer_uid, bin.change_date,

		rack.rack_code, rack.rack_name,
		whouse.wh_code, whouse.wh_name
	</sql>

	<sql id="select-bin-join">
		FROM TB_BIN bin
		INNER JOIN TB_RACK rack on rack.unique_id = bin.uid_rack
		INNER JOIN TB_WHOUSE whouse on whouse.unique_id = rack.uid_whouse
	</sql>

   <sql id="select-bin-where">
		WHERE bin.del_yn='N'
		<if test="uid_company">		AND bin.uid_company 		= 		#{uid_company}</if>
		<if test="uid_rack">		AND bin.uid_rack 			= 		#{uid_rack}</if>
		<if test="bin_code">		AND UPPER(bin.bin_code) 	like 	UPPER(#{bin_code})</if>
		<if test="bin_name">		AND UPPER(bin.bin_name) 	like 	UPPER(#{bin_name})</if>
		<if test="bin_row">			AND bin.bin_row 			= 		#{bin_row}</if>
		<if test="bin_col">			AND bin.bin_col 			= 		#{bin_col}</if>
		<if test="remark">			AND bin.remark 			= 		#{remark}</if>

		<if test="creator_uid">		AND	bin.creator_uid 	= 		#{creator_uid}</if>
		<if test="creator">			AND	bin.creator 		like 	#{creator}</if>
		<if test="create_date">		AND DATE_FORMAT(bin.create_date, '%Y-%m-%d') BETWEEN #{create_date_s} AND #{create_date_e}</if>
		<if test="changer_uid">		AND	bin.changer_uid 	= 		#{changer_uid}</if>
		<if test="changer">			AND	bin.changer 		like 	#{changer}</if>
		<if test="change_date">		AND DATE_FORMAT(bin.change_date, '%Y-%m-%d') BETWEEN #{change_date_s} AND #{change_date_e}</if>

		<if test="uid_whouse">		AND whouse.unique_id	= 		#{uid_whouse}</if>

		<if test="barcode">			AND	bin.bin_code 		= 		#{barcode}</if>
		<if test="unique_id">		AND	bin.unique_id 		= 		#{unique_id}</if>

		<if test="wh_code">		    AND	UPPER(whouse.wh_code) 		like		UPPER(#{wh_code})</if>
		<if test="rack_code">		AND	UPPER(rack.rack_code) 	    like 		UPPER(#{rack_code})</if>
		<if test="bin_row">		    AND	bin.bin_row 		= 		#{bin_row}</if>
		<if test="bin_col">		    AND	bin.bin_col 		= 		#{bin_col}</if>
		<if test="lotno">		    AND	location.lotno 		= 		#{lotno}</if>
	</sql>

	<select id="selectuid-bin" parameterType="java.lang.Long" resultMap="result">
		/*selectcond-bin*/SELECT
		<include refid="select-bin-fields" />
		<include refid="select-bin-join" />
		WHERE bin.del_yn='N' AND bin.unique_id=#{value}
	</select>

	<select id="selectcond-bin" parameterType="map" resultMap="result">
		/*selectcond-bin*/SELECT
		<include refid="select-bin-fields" />
		<include refid="select-bin-join" />
		<include refid="select-bin-where" />
	</select>

	<select id="selectcond-bin-count" parameterType="map" resultType="Integer">
		/*selectcond-bin-count*/SELECT
		COUNT(*) AS result
		<include refid="select-bin-join" />
		<include refid="select-bin-where" />
	</select>

	<select id="selectcond-bin-page" parameterType="map" resultMap="result">
		/*selectcond-bin-page*/SELECT
		<include refid="select-bin-fields" />
		<include refid="select-bin-join" />
		<include refid="select-bin-where" />
		${order_by}
		limit ${start_point} , ${end_point}
	</select>

	<sql id= "update-bymap-bin-set" >
		SET
			del_yn='N'
			<if test= "changer_uid"> 	,changer_uid 	= #{changer_uid} </if>
			<if test= "changer"> 		,changer 		= #{changer} </if>
			<if test= "change_date"> 	,change_date 	= #{change_date} </if>

			<if test= "uid_rack"> 		,uid_rack 		= #{uid_rack} </if>
			<if test= "bin_code"> 		,bin_code 		= #{bin_code} </if>
			<if test= "bin_name"> 		,bin_name 		= #{bin_name} </if>
			<if test= "bin_row"> 		,bin_row 		= #{bin_row} </if>
			<if test= "bin_col"> 		,bin_col 		= #{bin_col} </if>
			<if test= "remark"> 		,remark 		= #{remark} </if>
	</sql>

	<update id= "update-bymap-bin" parameterType = "map">
      /*update-bymap-bin*/
      UPDATE TB_BIN
      	<include refid= "update-bymap-bin-set" />
      WHERE
      	unique_id = #{unique_id}
      	AND del_yn='N'
	</update >

	<update id="delete-bymap-bin" parameterType="map">
		UPDATE TB_BIN
		SET
			changer_uid = #{changer_uid},
			changer = #{changer},
			change_date=#{change_date},
			del_yn = 'Y'
		where unique_id=#{unique_id}
	</update>

	<select id="getUsingBinList" parameterType="map" resultMap="result">
		/*getUsingBinList*/SELECT
		bin.unique_id, bin.uid_company, bin.uid_rack, bin.bin_code, bin.bin_name,
		bin.bin_row, bin.bin_col, bin.remark
		FROM tb_bin bin
		INNER JOIN tb_location location ON location.uid_bin = BIN.unique_id
		WHERE bin.del_yn = 'N' AND location.del_yn = 'N'
		AND bin.uid_company = #{uid_company} AND location.uid_company = #{uid_company}
		AND location.quan > 0
		AND bin.uid_rack IN (SELECT uid_rack FROM tb_bin WHERE unique_id = #{uid_bin})
		GROUP BY bin.unique_id
		ORDER BY bin.bin_code ASC
	</select>

	<select id="getUsingBinListByWhouseUid" parameterType="map" resultMap="result">
		/*getUsingBinListByWhouseUid*/SELECT
		bin.unique_id, bin.uid_company, bin.uid_rack, bin.bin_code, bin.bin_name,
		bin.bin_row, bin.bin_col, bin.remark
		FROM tb_bin bin
		INNER JOIN tb_location location ON location.uid_bin = BIN.unique_id
		INNER JOIN tb_rack rack ON rack.unique_id = BIN.uid_rack
		INNER JOIN tb_whouse whouse ON whouse.unique_id = rack.uid_whouse
		WHERE bin.del_yn = 'N' AND location.del_yn = 'N'
		AND bin.uid_company = #{uid_company} AND location.uid_company = #{uid_company}
		AND location.quan > 0
		AND rack.uid_whouse = #{uid_whouse}
		GROUP BY bin.unique_id
		ORDER BY bin.bin_code ASC
	</select>

	<select id="getUidBinByItemCode" parameterType="map" resultType="Long">
		/*getUidBinByItemCode*/SELECT
		unique_id as result
		FROM tb_bin
		WHERE del_yn = 'N'
		AND uid_company = #{uid_company}
		AND bin_code = #{bin_code}
	</select>

	<select id="getUidBinByBinCode" parameterType="map" resultType="Long">
		/*getUidBinByBinCode*/SELECT
		unique_id as result
		FROM tb_bin
		WHERE del_yn = 'N'
		AND uid_company = #{uid_company}
		AND bin_code = #{bin_code}
	</select>

	<resultMap type="HashMap" id="whouseGroupMap">
		<id column="rack_code" property="rack_code" />
	</resultMap>

	<select id="getRackGroup" parameterType="map" resultMap="whouseGroupMap">
		/*getRackGroup*/SELECT
		rack_code
		FROM TB_BIN bin
		INNER JOIN TB_RACK rack on rack.unique_id = bin.uid_rack
		INNER JOIN TB_WHOUSE whouse on whouse.unique_id = rack.uid_whouse
		WHERE bin.del_yn='N'
		AND bin.uid_company = #{uid_company}
		AND whouse.unique_id = #{uid_whouse}
		GROUP BY rack.unique_id
	</select>

</mapper>
